import {
  pgTable,
  serial,
  text,
  timestamp,
  boolean,
  integer,
  jsonb
} from "drizzle-orm/pg-core";

export const userSchema = pgTable("user", {
  id: serial("id").primaryKey(),
  email: text("email").notNull(),
  password: text("password").notNull(),
  createdAt: timestamp("created_at").defaultNow(),
  updatedAt: timestamp("updated_at").defaultNow().$onUpdateFn(() => new Date()),
  lastLogin: timestamp("last_login").defaultNow(),
  isActive: boolean("is_active").default(true),
  isEmailVerified: boolean("is_email_verified").default(false),
  isTwoFactorEnabled: boolean("is_two_factor_enabled").default(false),
  twoFactorSecret: text("two_factor_secret").default(''),
  resetToken: text("reset_token").default(''),
  profilePicture: text("profile_picture").default(''),
  resetTokenExpiry: timestamp("reset_token_expiry").defaultNow(),
  lockExpiry: timestamp("lock_expiry").defaultNow(),
  createdBy: text("created_by").default(''),
  updatedBy: text("updated_by").default(''),
  deletedAt: timestamp("deleted_at").defaultNow(),
  deletedBy: text("deleted_by").default(''),
  metadata: jsonb("metadata").default({}),
  sessionId: text("session_id").default(''),
  deviceInfo: jsonb("device_info").default({}),
  ipAddress: text("ip_address").default(''),
  userAgent: text("user_agent").default(''),
  twoFactorBackupCodes: text("two_factor_backup_codes").array().default([]),
  passwordResetRequestedAt: timestamp("password_reset_requested_at").defaultNow(),
  emailVerificationToken: text("email_verification_token").default(''),
  emailVerificationTokenExpiry: timestamp("email_verification_token_expiry").defaultNow(),
  lastFailedLogin: timestamp("last_failed_login").defaultNow(),
  failedLoginAttempts: integer("failed_login_attempts").default(0),
  lastPasswordReset: timestamp("last_password_reset").defaultNow(),
  passwordResetToken: text("password_reset_token").default(''),
  passwordResetTokenExpiry: timestamp("password_reset_token_expiry").defaultNow(),
  accountStatus: text("account_status").default("active"),
  securityQuestions: jsonb("security_questions").array().default([]),
  securityAnswers: jsonb("security_answers").array().default([]),
  lastSecurityQuestionChange: timestamp("last_security_question_change").defaultNow(),
  lastSecurityAnswerChange: timestamp("last_security_answer_change").defaultNow(),
  passwordChangeRequired: boolean("password_change_required").default(false),
  passwordChangeDeadline: timestamp("password_change_deadline").defaultNow(),
  accountRecoveryEmail: text("account_recovery_email").default(''),
  accountRecoveryPhone: text("account_recovery_phone").default(''),
  accountRecoveryToken: text("account_recovery_token").default(''),
  accountRecoveryTokenExpiry: timestamp("account_recovery_token_expiry").defaultNow(),
  accountRecoveryRequestedAt: timestamp("account_recovery_requested_at").defaultNow(),
  accountRecoveryStatus: text("account_recovery_status").default("pending"),
  accountRecoveryMethod: text("account_recovery_method").default("email"),
  accountRecoveryVerified: boolean("account_recovery_verified").default(false),
  accountRecoveryVerificationToken: text("account_recovery_verification_token").default(''),
  accountRecoveryVerificationTokenExpiry: timestamp("account_recovery_verification_token_expiry").defaultNow(),
  accountRecoveryVerificationRequestedAt: timestamp("account_recovery_verification_requested_at").defaultNow(),
});